KEYWORD  [line 006]  def
KEYWORD  [line 006]  int
ID       [line 006]  fact
SYMBOL   [line 006]  (
KEYWORD  [line 006]  int
ID       [line 006]  n
SYMBOL   [line 006]  )
SYMBOL   [line 007]  {
KEYWORD  [line 008]  if
SYMBOL   [line 008]  (
ID       [line 008]  n
SYMBOL   [line 008]  ==
DECLIT   [line 008]  0
SYMBOL   [line 008]  )
SYMBOL   [line 009]  {
KEYWORD  [line 010]  return
DECLIT   [line 010]  1
SYMBOL   [line 010]  ;
SYMBOL   [line 011]  }
KEYWORD  [line 012]  return
ID       [line 012]  n
SYMBOL   [line 012]  *
ID       [line 012]  fact
SYMBOL   [line 012]  (
ID       [line 012]  n
SYMBOL   [line 012]  -
DECLIT   [line 012]  1
SYMBOL   [line 012]  )
SYMBOL   [line 012]  ;
SYMBOL   [line 013]  }
KEYWORD  [line 015]  def
KEYWORD  [line 015]  int
ID       [line 015]  fib
SYMBOL   [line 015]  (
KEYWORD  [line 015]  int
ID       [line 015]  n
SYMBOL   [line 015]  )
SYMBOL   [line 016]  {
KEYWORD  [line 017]  if
SYMBOL   [line 017]  (
ID       [line 017]  n
SYMBOL   [line 017]  <=
DECLIT   [line 017]  0
SYMBOL   [line 017]  )
SYMBOL   [line 018]  {
KEYWORD  [line 019]  return
DECLIT   [line 019]  0
SYMBOL   [line 019]  ;
SYMBOL   [line 020]  }
KEYWORD  [line 021]  if
SYMBOL   [line 021]  (
ID       [line 021]  n
SYMBOL   [line 021]  ==
DECLIT   [line 021]  1
SYMBOL   [line 021]  )
SYMBOL   [line 022]  {
KEYWORD  [line 023]  return
DECLIT   [line 023]  1
SYMBOL   [line 023]  ;
SYMBOL   [line 024]  }
KEYWORD  [line 025]  return
ID       [line 025]  fib
SYMBOL   [line 025]  (
ID       [line 025]  n
SYMBOL   [line 025]  -
DECLIT   [line 025]  1
SYMBOL   [line 025]  )
SYMBOL   [line 025]  +
ID       [line 025]  fib
SYMBOL   [line 025]  (
ID       [line 025]  n
SYMBOL   [line 025]  -
DECLIT   [line 025]  2
SYMBOL   [line 025]  )
SYMBOL   [line 025]  ;
SYMBOL   [line 026]  }
KEYWORD  [line 028]  def
KEYWORD  [line 028]  bool
ID       [line 028]  is_prime
SYMBOL   [line 028]  (
KEYWORD  [line 028]  int
ID       [line 028]  n
SYMBOL   [line 028]  )
SYMBOL   [line 029]  {
KEYWORD  [line 030]  int
ID       [line 030]  div
SYMBOL   [line 030]  ;
ID       [line 031]  div
SYMBOL   [line 031]  =
DECLIT   [line 031]  2
SYMBOL   [line 031]  ;
KEYWORD  [line 032]  if
SYMBOL   [line 032]  (
ID       [line 032]  n
SYMBOL   [line 032]  ==
DECLIT   [line 032]  1
SYMBOL   [line 032]  )
SYMBOL   [line 033]  {
KEYWORD  [line 034]  return
KEYWORD  [line 034]  false
SYMBOL   [line 034]  ;
SYMBOL   [line 035]  }
KEYWORD  [line 036]  while
SYMBOL   [line 036]  (
ID       [line 036]  div
SYMBOL   [line 036]  <
ID       [line 036]  n
SYMBOL   [line 036]  )
SYMBOL   [line 037]  {
KEYWORD  [line 038]  if
SYMBOL   [line 038]  (
ID       [line 038]  n
SYMBOL   [line 038]  %
ID       [line 038]  div
SYMBOL   [line 038]  ==
DECLIT   [line 038]  0
SYMBOL   [line 038]  )
SYMBOL   [line 039]  {
KEYWORD  [line 040]  return
KEYWORD  [line 040]  false
SYMBOL   [line 040]  ;
SYMBOL   [line 041]  }
ID       [line 042]  div
SYMBOL   [line 042]  =
ID       [line 042]  div
SYMBOL   [line 042]  +
DECLIT   [line 042]  1
SYMBOL   [line 042]  ;
SYMBOL   [line 043]  }
KEYWORD  [line 044]  return
KEYWORD  [line 044]  true
SYMBOL   [line 044]  ;
SYMBOL   [line 046]  }
KEYWORD  [line 048]  def
KEYWORD  [line 048]  int
ID       [line 048]  gcd
SYMBOL   [line 048]  (
KEYWORD  [line 048]  int
ID       [line 048]  a
SYMBOL   [line 048]  ,
KEYWORD  [line 048]  int
ID       [line 048]  b
SYMBOL   [line 048]  )
SYMBOL   [line 049]  {
KEYWORD  [line 050]  if
SYMBOL   [line 050]  (
ID       [line 050]  a
SYMBOL   [line 050]  ==
DECLIT   [line 050]  0
SYMBOL   [line 050]  )
SYMBOL   [line 051]  {
KEYWORD  [line 052]  return
ID       [line 052]  b
SYMBOL   [line 052]  ;
SYMBOL   [line 053]  }
KEYWORD  [line 055]  return
ID       [line 055]  gcd
SYMBOL   [line 055]  (
ID       [line 055]  b
SYMBOL   [line 055]  %
ID       [line 055]  a
SYMBOL   [line 055]  ,
ID       [line 055]  a
SYMBOL   [line 055]  )
SYMBOL   [line 055]  ;
SYMBOL   [line 056]  }
KEYWORD  [line 058]  int
ID       [line 058]  nums
SYMBOL   [line 058]  [
DECLIT   [line 058]  100
SYMBOL   [line 058]  ]
SYMBOL   [line 058]  ;
KEYWORD  [line 060]  def
KEYWORD  [line 060]  int
ID       [line 060]  sum_nums
SYMBOL   [line 060]  (
KEYWORD  [line 060]  int
ID       [line 060]  len
SYMBOL   [line 060]  )
SYMBOL   [line 061]  {
KEYWORD  [line 062]  int
ID       [line 062]  sum
SYMBOL   [line 062]  ;
KEYWORD  [line 063]  int
ID       [line 063]  i
SYMBOL   [line 063]  ;
ID       [line 064]  sum
SYMBOL   [line 064]  =
DECLIT   [line 064]  0
SYMBOL   [line 064]  ;
ID       [line 065]  i
SYMBOL   [line 065]  =
DECLIT   [line 065]  0
SYMBOL   [line 065]  ;
KEYWORD  [line 067]  while
SYMBOL   [line 067]  (
ID       [line 067]  i
SYMBOL   [line 067]  <
ID       [line 067]  len
SYMBOL   [line 067]  )
SYMBOL   [line 068]  {
ID       [line 069]  sum
SYMBOL   [line 069]  =
ID       [line 069]  sum
SYMBOL   [line 069]  +
ID       [line 069]  nums
SYMBOL   [line 069]  [
ID       [line 069]  i
SYMBOL   [line 069]  ]
SYMBOL   [line 069]  ;
ID       [line 070]  i
SYMBOL   [line 070]  =
ID       [line 070]  i
SYMBOL   [line 070]  +
DECLIT   [line 070]  1
SYMBOL   [line 070]  ;
SYMBOL   [line 071]  }
KEYWORD  [line 072]  return
ID       [line 072]  sum
SYMBOL   [line 072]  ;
SYMBOL   [line 073]  }
KEYWORD  [line 075]  def
KEYWORD  [line 075]  void
ID       [line 075]  sort_nums
SYMBOL   [line 075]  (
KEYWORD  [line 075]  int
ID       [line 075]  len
SYMBOL   [line 075]  )
SYMBOL   [line 076]  {
KEYWORD  [line 078]  int
ID       [line 078]  count
SYMBOL   [line 078]  ;
KEYWORD  [line 079]  int
ID       [line 079]  hold
SYMBOL   [line 079]  ;
KEYWORD  [line 080]  int
ID       [line 080]  hold2
SYMBOL   [line 080]  ;
KEYWORD  [line 081]  int
ID       [line 081]  h
SYMBOL   [line 081]  ;
ID       [line 082]  count
SYMBOL   [line 082]  =
DECLIT   [line 082]  0
SYMBOL   [line 082]  ;
KEYWORD  [line 084]  while
SYMBOL   [line 084]  (
ID       [line 084]  count
SYMBOL   [line 084]  <=
ID       [line 084]  len
SYMBOL   [line 084]  )
SYMBOL   [line 085]  {
ID       [line 086]  hold
SYMBOL   [line 086]  =
ID       [line 086]  count
SYMBOL   [line 086]  +
DECLIT   [line 086]  1
SYMBOL   [line 086]  ;
ID       [line 087]  h
SYMBOL   [line 087]  =
ID       [line 087]  count
SYMBOL   [line 087]  ;
KEYWORD  [line 088]  while
SYMBOL   [line 088]  (
ID       [line 088]  hold
SYMBOL   [line 088]  <=
ID       [line 088]  len
SYMBOL   [line 088]  )
SYMBOL   [line 089]  {
KEYWORD  [line 090]  if
SYMBOL   [line 090]  (
ID       [line 090]  nums
SYMBOL   [line 090]  [
ID       [line 090]  h
SYMBOL   [line 090]  ]
SYMBOL   [line 090]  >
ID       [line 090]  nums
SYMBOL   [line 090]  [
ID       [line 090]  hold
SYMBOL   [line 090]  ]
SYMBOL   [line 090]  )
SYMBOL   [line 091]  {
ID       [line 092]  h
SYMBOL   [line 092]  =
ID       [line 092]  hold
SYMBOL   [line 092]  ;
SYMBOL   [line 093]  }
ID       [line 094]  hold
SYMBOL   [line 094]  =
ID       [line 094]  hold
SYMBOL   [line 094]  +
DECLIT   [line 094]  1
SYMBOL   [line 094]  ;
SYMBOL   [line 095]  }
ID       [line 096]  hold2
SYMBOL   [line 096]  =
ID       [line 096]  nums
SYMBOL   [line 096]  [
ID       [line 096]  count
SYMBOL   [line 096]  ]
SYMBOL   [line 096]  ;
ID       [line 097]  nums
SYMBOL   [line 097]  [
ID       [line 097]  count
SYMBOL   [line 097]  ]
SYMBOL   [line 097]  =
ID       [line 097]  nums
SYMBOL   [line 097]  [
ID       [line 097]  h
SYMBOL   [line 097]  ]
SYMBOL   [line 097]  ;
ID       [line 098]  nums
SYMBOL   [line 098]  [
ID       [line 098]  h
SYMBOL   [line 098]  ]
SYMBOL   [line 098]  =
ID       [line 098]  hold2
SYMBOL   [line 098]  ;
ID       [line 099]  count
SYMBOL   [line 099]  =
ID       [line 099]  count
SYMBOL   [line 099]  +
DECLIT   [line 099]  1
SYMBOL   [line 099]  ;
SYMBOL   [line 100]  }
KEYWORD  [line 102]  return
SYMBOL   [line 102]  ;
SYMBOL   [line 103]  }
KEYWORD  [line 105]  def
KEYWORD  [line 105]  void
ID       [line 105]  draw_triangle
SYMBOL   [line 105]  (
KEYWORD  [line 105]  int
ID       [line 105]  base
SYMBOL   [line 105]  )
SYMBOL   [line 106]  {
KEYWORD  [line 107]  int
ID       [line 107]  count
SYMBOL   [line 107]  ;
KEYWORD  [line 108]  int
ID       [line 108]  row_count
SYMBOL   [line 108]  ;
KEYWORD  [line 109]  int
ID       [line 109]  space_num
SYMBOL   [line 109]  ;
ID       [line 110]  count
SYMBOL   [line 110]  =
DECLIT   [line 110]  0
SYMBOL   [line 110]  ;
KEYWORD  [line 112]  if
SYMBOL   [line 112]  (
ID       [line 112]  base
SYMBOL   [line 112]  ==
DECLIT   [line 112]  2
SYMBOL   [line 112]  )
SYMBOL   [line 113]  {
ID       [line 114]  print_str
SYMBOL   [line 114]  (
STRLIT   [line 114]  "##\n"
SYMBOL   [line 114]  )
SYMBOL   [line 114]  ;
KEYWORD  [line 115]  return
SYMBOL   [line 115]  ;
SYMBOL   [line 116]  }
KEYWORD  [line 117]  if
SYMBOL   [line 117]  (
ID       [line 117]  base
SYMBOL   [line 117]  ==
DECLIT   [line 117]  1
SYMBOL   [line 117]  )
SYMBOL   [line 118]  {
ID       [line 119]  print_str
SYMBOL   [line 119]  (
STRLIT   [line 119]  "#\n"
SYMBOL   [line 119]  )
SYMBOL   [line 119]  ;
KEYWORD  [line 120]  return
SYMBOL   [line 120]  ;
SYMBOL   [line 121]  }
ID       [line 123]  space_num
SYMBOL   [line 123]  =
SYMBOL   [line 123]  (
ID       [line 123]  base
SYMBOL   [line 123]  /
DECLIT   [line 123]  2
SYMBOL   [line 123]  )
SYMBOL   [line 123]  -
DECLIT   [line 123]  1
SYMBOL   [line 123]  ;
KEYWORD  [line 124]  while
SYMBOL   [line 124]  (
ID       [line 124]  count
SYMBOL   [line 124]  <
ID       [line 124]  space_num
SYMBOL   [line 124]  )
SYMBOL   [line 125]  {
ID       [line 126]  print_str
SYMBOL   [line 126]  (
STRLIT   [line 126]  " "
SYMBOL   [line 126]  )
SYMBOL   [line 126]  ;
ID       [line 127]  count
SYMBOL   [line 127]  =
ID       [line 127]  count
SYMBOL   [line 127]  +
DECLIT   [line 127]  1
SYMBOL   [line 127]  ;
SYMBOL   [line 128]  }
ID       [line 129]  count
SYMBOL   [line 129]  =
DECLIT   [line 129]  0
SYMBOL   [line 129]  ;
KEYWORD  [line 130]  if
SYMBOL   [line 130]  (
ID       [line 130]  base
SYMBOL   [line 130]  %
DECLIT   [line 130]  2
SYMBOL   [line 130]  ==
DECLIT   [line 130]  0
SYMBOL   [line 130]  )
SYMBOL   [line 131]  {
ID       [line 132]  row_count
SYMBOL   [line 132]  =
DECLIT   [line 132]  2
SYMBOL   [line 132]  ;
ID       [line 133]  print_str
SYMBOL   [line 133]  (
STRLIT   [line 133]  "##\n"
SYMBOL   [line 133]  )
SYMBOL   [line 133]  ;
SYMBOL   [line 134]  }
KEYWORD  [line 135]  else
SYMBOL   [line 136]  {
ID       [line 137]  space_num
SYMBOL   [line 137]  =
ID       [line 137]  space_num
SYMBOL   [line 137]  +
DECLIT   [line 137]  1
SYMBOL   [line 137]  ;
ID       [line 138]  row_count
SYMBOL   [line 138]  =
DECLIT   [line 138]  1
SYMBOL   [line 138]  ;
ID       [line 139]  print_str
SYMBOL   [line 139]  (
STRLIT   [line 139]  " #\n"
SYMBOL   [line 139]  )
SYMBOL   [line 139]  ;
SYMBOL   [line 140]  }
KEYWORD  [line 142]  while
SYMBOL   [line 142]  (
ID       [line 142]  row_count
SYMBOL   [line 142]  <
ID       [line 142]  base
SYMBOL   [line 142]  )
SYMBOL   [line 143]  {
ID       [line 145]  count
SYMBOL   [line 145]  =
DECLIT   [line 145]  0
SYMBOL   [line 145]  ;
ID       [line 146]  row_count
SYMBOL   [line 146]  =
ID       [line 146]  row_count
SYMBOL   [line 146]  +
DECLIT   [line 146]  2
SYMBOL   [line 146]  ;
ID       [line 148]  space_num
SYMBOL   [line 148]  =
ID       [line 148]  space_num
SYMBOL   [line 148]  -
DECLIT   [line 148]  1
SYMBOL   [line 148]  ;
KEYWORD  [line 150]  while
SYMBOL   [line 150]  (
ID       [line 150]  count
SYMBOL   [line 150]  <
ID       [line 150]  space_num
SYMBOL   [line 150]  )
SYMBOL   [line 151]  {
ID       [line 152]  print_str
SYMBOL   [line 152]  (
STRLIT   [line 152]  " "
SYMBOL   [line 152]  )
SYMBOL   [line 152]  ;
ID       [line 153]  count
SYMBOL   [line 153]  =
ID       [line 153]  count
SYMBOL   [line 153]  +
DECLIT   [line 153]  1
SYMBOL   [line 153]  ;
SYMBOL   [line 154]  }
ID       [line 155]  count
SYMBOL   [line 155]  =
DECLIT   [line 155]  0
SYMBOL   [line 155]  ;
KEYWORD  [line 157]  while
SYMBOL   [line 157]  (
ID       [line 157]  count
SYMBOL   [line 157]  <
ID       [line 157]  row_count
SYMBOL   [line 157]  )
SYMBOL   [line 158]  {
ID       [line 159]  print_str
SYMBOL   [line 159]  (
STRLIT   [line 159]  "#"
SYMBOL   [line 159]  )
SYMBOL   [line 159]  ;
ID       [line 160]  count
SYMBOL   [line 160]  =
ID       [line 160]  count
SYMBOL   [line 160]  +
DECLIT   [line 160]  1
SYMBOL   [line 160]  ;
SYMBOL   [line 161]  }
ID       [line 162]  print_str
SYMBOL   [line 162]  (
STRLIT   [line 162]  "\n"
SYMBOL   [line 162]  )
SYMBOL   [line 162]  ;
ID       [line 164]  count
SYMBOL   [line 164]  =
DECLIT   [line 164]  0
SYMBOL   [line 164]  ;
SYMBOL   [line 165]  }
KEYWORD  [line 167]  return
SYMBOL   [line 167]  ;
SYMBOL   [line 168]  }
KEYWORD  [line 172]  def
KEYWORD  [line 172]  void
ID       [line 172]  test_fact
SYMBOL   [line 172]  (
SYMBOL   [line 172]  )
SYMBOL   [line 173]  {
ID       [line 174]  print_str
SYMBOL   [line 174]  (
STRLIT   [line 174]  "Test_Fact"
SYMBOL   [line 174]  )
SYMBOL   [line 174]  ;
ID       [line 175]  print_str
SYMBOL   [line 175]  (
STRLIT   [line 175]  "\n"
SYMBOL   [line 175]  )
SYMBOL   [line 175]  ;
ID       [line 176]  print_str
SYMBOL   [line 176]  (
STRLIT   [line 176]  "Expected: 2\nWas: "
SYMBOL   [line 176]  )
SYMBOL   [line 176]  ;
ID       [line 177]  print_int
SYMBOL   [line 177]  (
ID       [line 177]  fact
SYMBOL   [line 177]  (
DECLIT   [line 177]  2
SYMBOL   [line 177]  )
SYMBOL   [line 177]  )
SYMBOL   [line 177]  ;
ID       [line 178]  print_str
SYMBOL   [line 178]  (
STRLIT   [line 178]  "\n"
SYMBOL   [line 178]  )
SYMBOL   [line 178]  ;
ID       [line 179]  print_str
SYMBOL   [line 179]  (
STRLIT   [line 179]  "Expected: 6\nWas: "
SYMBOL   [line 179]  )
SYMBOL   [line 179]  ;
ID       [line 180]  print_int
SYMBOL   [line 180]  (
ID       [line 180]  fact
SYMBOL   [line 180]  (
DECLIT   [line 180]  3
SYMBOL   [line 180]  )
SYMBOL   [line 180]  )
SYMBOL   [line 180]  ;
ID       [line 181]  print_str
SYMBOL   [line 181]  (
STRLIT   [line 181]  "\n"
SYMBOL   [line 181]  )
SYMBOL   [line 181]  ;
ID       [line 182]  print_str
SYMBOL   [line 182]  (
STRLIT   [line 182]  "Expected: 24\nWas: "
SYMBOL   [line 182]  )
SYMBOL   [line 182]  ;
ID       [line 183]  print_int
SYMBOL   [line 183]  (
ID       [line 183]  fact
SYMBOL   [line 183]  (
DECLIT   [line 183]  4
SYMBOL   [line 183]  )
SYMBOL   [line 183]  )
SYMBOL   [line 183]  ;
ID       [line 184]  print_str
SYMBOL   [line 184]  (
STRLIT   [line 184]  "\n"
SYMBOL   [line 184]  )
SYMBOL   [line 184]  ;
ID       [line 185]  print_str
SYMBOL   [line 185]  (
STRLIT   [line 185]  "Expected: 362880\nWas: "
SYMBOL   [line 185]  )
SYMBOL   [line 185]  ;
ID       [line 186]  print_int
SYMBOL   [line 186]  (
ID       [line 186]  fact
SYMBOL   [line 186]  (
DECLIT   [line 186]  9
SYMBOL   [line 186]  )
SYMBOL   [line 186]  )
SYMBOL   [line 186]  ;
ID       [line 187]  print_str
SYMBOL   [line 187]  (
STRLIT   [line 187]  "\n"
SYMBOL   [line 187]  )
SYMBOL   [line 187]  ;
ID       [line 188]  print_str
SYMBOL   [line 188]  (
STRLIT   [line 188]  "\n"
SYMBOL   [line 188]  )
SYMBOL   [line 188]  ;
SYMBOL   [line 189]  }
KEYWORD  [line 191]  def
KEYWORD  [line 191]  void
ID       [line 191]  test_fib
SYMBOL   [line 191]  (
SYMBOL   [line 191]  )
SYMBOL   [line 192]  {
ID       [line 193]  print_str
SYMBOL   [line 193]  (
STRLIT   [line 193]  "Test_Fib"
SYMBOL   [line 193]  )
SYMBOL   [line 193]  ;
ID       [line 194]  print_str
SYMBOL   [line 194]  (
STRLIT   [line 194]  "\n"
SYMBOL   [line 194]  )
SYMBOL   [line 194]  ;
ID       [line 195]  print_str
SYMBOL   [line 195]  (
STRLIT   [line 195]  "Expected: 1\nWas: "
SYMBOL   [line 195]  )
SYMBOL   [line 195]  ;
ID       [line 196]  print_int
SYMBOL   [line 196]  (
ID       [line 196]  fib
SYMBOL   [line 196]  (
DECLIT   [line 196]  1
SYMBOL   [line 196]  )
SYMBOL   [line 196]  )
SYMBOL   [line 196]  ;
ID       [line 197]  print_str
SYMBOL   [line 197]  (
STRLIT   [line 197]  "\n"
SYMBOL   [line 197]  )
SYMBOL   [line 197]  ;
ID       [line 198]  print_str
SYMBOL   [line 198]  (
STRLIT   [line 198]  "Expected: 1\nWas: "
SYMBOL   [line 198]  )
SYMBOL   [line 198]  ;
ID       [line 199]  print_int
SYMBOL   [line 199]  (
ID       [line 199]  fib
SYMBOL   [line 199]  (
DECLIT   [line 199]  2
SYMBOL   [line 199]  )
SYMBOL   [line 199]  )
SYMBOL   [line 199]  ;
ID       [line 200]  print_str
SYMBOL   [line 200]  (
STRLIT   [line 200]  "\n"
SYMBOL   [line 200]  )
SYMBOL   [line 200]  ;
ID       [line 201]  print_str
SYMBOL   [line 201]  (
STRLIT   [line 201]  "Expected: 2\nWas: "
SYMBOL   [line 201]  )
SYMBOL   [line 201]  ;
ID       [line 202]  print_int
SYMBOL   [line 202]  (
ID       [line 202]  fib
SYMBOL   [line 202]  (
DECLIT   [line 202]  3
SYMBOL   [line 202]  )
SYMBOL   [line 202]  )
SYMBOL   [line 202]  ;
ID       [line 203]  print_str
SYMBOL   [line 203]  (
STRLIT   [line 203]  "\n"
SYMBOL   [line 203]  )
SYMBOL   [line 203]  ;
ID       [line 204]  print_str
SYMBOL   [line 204]  (
STRLIT   [line 204]  "Expected: 3\nWas: "
SYMBOL   [line 204]  )
SYMBOL   [line 204]  ;
ID       [line 205]  print_int
SYMBOL   [line 205]  (
ID       [line 205]  fib
SYMBOL   [line 205]  (
DECLIT   [line 205]  4
SYMBOL   [line 205]  )
SYMBOL   [line 205]  )
SYMBOL   [line 205]  ;
ID       [line 206]  print_str
SYMBOL   [line 206]  (
STRLIT   [line 206]  "\n"
SYMBOL   [line 206]  )
SYMBOL   [line 206]  ;
ID       [line 207]  print_str
SYMBOL   [line 207]  (
STRLIT   [line 207]  "Expected: 55\nWas: "
SYMBOL   [line 207]  )
SYMBOL   [line 207]  ;
ID       [line 208]  print_int
SYMBOL   [line 208]  (
ID       [line 208]  fib
SYMBOL   [line 208]  (
DECLIT   [line 208]  10
SYMBOL   [line 208]  )
SYMBOL   [line 208]  )
SYMBOL   [line 208]  ;
ID       [line 209]  print_str
SYMBOL   [line 209]  (
STRLIT   [line 209]  "\n"
SYMBOL   [line 209]  )
SYMBOL   [line 209]  ;
ID       [line 210]  print_str
SYMBOL   [line 210]  (
STRLIT   [line 210]  "\n"
SYMBOL   [line 210]  )
SYMBOL   [line 210]  ;
SYMBOL   [line 211]  }
KEYWORD  [line 213]  def
KEYWORD  [line 213]  void
ID       [line 213]  test_is_prime
SYMBOL   [line 213]  (
SYMBOL   [line 213]  )
SYMBOL   [line 214]  {
ID       [line 215]  print_str
SYMBOL   [line 215]  (
STRLIT   [line 215]  "Test_Is_Prime"
SYMBOL   [line 215]  )
SYMBOL   [line 215]  ;
ID       [line 216]  print_str
SYMBOL   [line 216]  (
STRLIT   [line 216]  "\n"
SYMBOL   [line 216]  )
SYMBOL   [line 216]  ;
ID       [line 217]  print_str
SYMBOL   [line 217]  (
STRLIT   [line 217]  "Expected: 0\nWas: "
SYMBOL   [line 217]  )
SYMBOL   [line 217]  ;
ID       [line 218]  print_bool
SYMBOL   [line 218]  (
ID       [line 218]  is_prime
SYMBOL   [line 218]  (
DECLIT   [line 218]  1
SYMBOL   [line 218]  )
SYMBOL   [line 218]  )
SYMBOL   [line 218]  ;
ID       [line 219]  print_str
SYMBOL   [line 219]  (
STRLIT   [line 219]  "\n"
SYMBOL   [line 219]  )
SYMBOL   [line 219]  ;
ID       [line 220]  print_str
SYMBOL   [line 220]  (
STRLIT   [line 220]  "Expected: 1\nWas: "
SYMBOL   [line 220]  )
SYMBOL   [line 220]  ;
ID       [line 221]  print_bool
SYMBOL   [line 221]  (
ID       [line 221]  is_prime
SYMBOL   [line 221]  (
DECLIT   [line 221]  2
SYMBOL   [line 221]  )
SYMBOL   [line 221]  )
SYMBOL   [line 221]  ;
ID       [line 222]  print_str
SYMBOL   [line 222]  (
STRLIT   [line 222]  "\n"
SYMBOL   [line 222]  )
SYMBOL   [line 222]  ;
ID       [line 223]  print_str
SYMBOL   [line 223]  (
STRLIT   [line 223]  "Expected: 1\nWas: "
SYMBOL   [line 223]  )
SYMBOL   [line 223]  ;
ID       [line 224]  print_bool
SYMBOL   [line 224]  (
ID       [line 224]  is_prime
SYMBOL   [line 224]  (
DECLIT   [line 224]  3
SYMBOL   [line 224]  )
SYMBOL   [line 224]  )
SYMBOL   [line 224]  ;
ID       [line 225]  print_str
SYMBOL   [line 225]  (
STRLIT   [line 225]  "\n"
SYMBOL   [line 225]  )
SYMBOL   [line 225]  ;
ID       [line 226]  print_str
SYMBOL   [line 226]  (
STRLIT   [line 226]  "Expected: 0\nWas: "
SYMBOL   [line 226]  )
SYMBOL   [line 226]  ;
ID       [line 227]  print_bool
SYMBOL   [line 227]  (
ID       [line 227]  is_prime
SYMBOL   [line 227]  (
DECLIT   [line 227]  4
SYMBOL   [line 227]  )
SYMBOL   [line 227]  )
SYMBOL   [line 227]  ;
ID       [line 228]  print_str
SYMBOL   [line 228]  (
STRLIT   [line 228]  "\n"
SYMBOL   [line 228]  )
SYMBOL   [line 228]  ;
ID       [line 229]  print_str
SYMBOL   [line 229]  (
STRLIT   [line 229]  "Expected: 0\nWas: "
SYMBOL   [line 229]  )
SYMBOL   [line 229]  ;
ID       [line 230]  print_bool
SYMBOL   [line 230]  (
ID       [line 230]  is_prime
SYMBOL   [line 230]  (
DECLIT   [line 230]  6
SYMBOL   [line 230]  )
SYMBOL   [line 230]  )
SYMBOL   [line 230]  ;
ID       [line 231]  print_str
SYMBOL   [line 231]  (
STRLIT   [line 231]  "\n"
SYMBOL   [line 231]  )
SYMBOL   [line 231]  ;
ID       [line 232]  print_str
SYMBOL   [line 232]  (
STRLIT   [line 232]  "\n"
SYMBOL   [line 232]  )
SYMBOL   [line 232]  ;
SYMBOL   [line 233]  }
KEYWORD  [line 235]  def
KEYWORD  [line 235]  void
ID       [line 235]  test_gcd
SYMBOL   [line 235]  (
SYMBOL   [line 235]  )
SYMBOL   [line 236]  {
ID       [line 237]  print_str
SYMBOL   [line 237]  (
STRLIT   [line 237]  "Test_GCD"
SYMBOL   [line 237]  )
SYMBOL   [line 237]  ;
ID       [line 238]  print_str
SYMBOL   [line 238]  (
STRLIT   [line 238]  "\n"
SYMBOL   [line 238]  )
SYMBOL   [line 238]  ;
ID       [line 239]  print_str
SYMBOL   [line 239]  (
STRLIT   [line 239]  "Expected: 4\nWas: "
SYMBOL   [line 239]  )
SYMBOL   [line 239]  ;
ID       [line 240]  print_int
SYMBOL   [line 240]  (
ID       [line 240]  gcd
SYMBOL   [line 240]  (
DECLIT   [line 240]  8
SYMBOL   [line 240]  ,
DECLIT   [line 240]  12
SYMBOL   [line 240]  )
SYMBOL   [line 240]  )
SYMBOL   [line 240]  ;
ID       [line 241]  print_str
SYMBOL   [line 241]  (
STRLIT   [line 241]  "\n"
SYMBOL   [line 241]  )
SYMBOL   [line 241]  ;
ID       [line 242]  print_str
SYMBOL   [line 242]  (
STRLIT   [line 242]  "Expected: 6\nWas: "
SYMBOL   [line 242]  )
SYMBOL   [line 242]  ;
ID       [line 243]  print_int
SYMBOL   [line 243]  (
ID       [line 243]  gcd
SYMBOL   [line 243]  (
DECLIT   [line 243]  24
SYMBOL   [line 243]  ,
DECLIT   [line 243]  54
SYMBOL   [line 243]  )
SYMBOL   [line 243]  )
SYMBOL   [line 243]  ;
ID       [line 244]  print_str
SYMBOL   [line 244]  (
STRLIT   [line 244]  "\n"
SYMBOL   [line 244]  )
SYMBOL   [line 244]  ;
ID       [line 245]  print_str
SYMBOL   [line 245]  (
STRLIT   [line 245]  "Expected: 6\nWas: "
SYMBOL   [line 245]  )
SYMBOL   [line 245]  ;
ID       [line 246]  print_int
SYMBOL   [line 246]  (
ID       [line 246]  gcd
SYMBOL   [line 246]  (
DECLIT   [line 246]  6
SYMBOL   [line 246]  ,
DECLIT   [line 246]  12
SYMBOL   [line 246]  )
SYMBOL   [line 246]  )
SYMBOL   [line 246]  ;
ID       [line 247]  print_str
SYMBOL   [line 247]  (
STRLIT   [line 247]  "\n"
SYMBOL   [line 247]  )
SYMBOL   [line 247]  ;
ID       [line 248]  print_str
SYMBOL   [line 248]  (
STRLIT   [line 248]  "Expected: 2\nWas: "
SYMBOL   [line 248]  )
SYMBOL   [line 248]  ;
ID       [line 249]  print_int
SYMBOL   [line 249]  (
ID       [line 249]  gcd
SYMBOL   [line 249]  (
DECLIT   [line 249]  2
SYMBOL   [line 249]  ,
DECLIT   [line 249]  12
SYMBOL   [line 249]  )
SYMBOL   [line 249]  )
SYMBOL   [line 249]  ;
ID       [line 250]  print_str
SYMBOL   [line 250]  (
STRLIT   [line 250]  "\n"
SYMBOL   [line 250]  )
SYMBOL   [line 250]  ;
ID       [line 251]  print_str
SYMBOL   [line 251]  (
STRLIT   [line 251]  "\n"
SYMBOL   [line 251]  )
SYMBOL   [line 251]  ;
SYMBOL   [line 252]  }
KEYWORD  [line 254]  def
KEYWORD  [line 254]  void
ID       [line 254]  test_sum_nums
SYMBOL   [line 254]  (
SYMBOL   [line 254]  )
SYMBOL   [line 255]  {
ID       [line 256]  print_str
SYMBOL   [line 256]  (
STRLIT   [line 256]  "Test_Sum_Nums"
SYMBOL   [line 256]  )
SYMBOL   [line 256]  ;
ID       [line 257]  print_str
SYMBOL   [line 257]  (
STRLIT   [line 257]  "\n"
SYMBOL   [line 257]  )
SYMBOL   [line 257]  ;
ID       [line 258]  nums
SYMBOL   [line 258]  [
DECLIT   [line 258]  0
SYMBOL   [line 258]  ]
SYMBOL   [line 258]  =
DECLIT   [line 258]  1
SYMBOL   [line 258]  ;
ID       [line 259]  print_str
SYMBOL   [line 259]  (
STRLIT   [line 259]  "Expected: 1\nWas: "
SYMBOL   [line 259]  )
SYMBOL   [line 259]  ;
ID       [line 260]  print_int
SYMBOL   [line 260]  (
ID       [line 260]  sum_nums
SYMBOL   [line 260]  (
DECLIT   [line 260]  8
SYMBOL   [line 260]  )
SYMBOL   [line 260]  )
SYMBOL   [line 260]  ;
ID       [line 261]  print_str
SYMBOL   [line 261]  (
STRLIT   [line 261]  "\n"
SYMBOL   [line 261]  )
SYMBOL   [line 261]  ;
ID       [line 262]  nums
SYMBOL   [line 262]  [
DECLIT   [line 262]  3
SYMBOL   [line 262]  ]
SYMBOL   [line 262]  =
DECLIT   [line 262]  6
SYMBOL   [line 262]  ;
ID       [line 263]  print_str
SYMBOL   [line 263]  (
STRLIT   [line 263]  "Expected: 7\nWas: "
SYMBOL   [line 263]  )
SYMBOL   [line 263]  ;
ID       [line 264]  print_int
SYMBOL   [line 264]  (
ID       [line 264]  sum_nums
SYMBOL   [line 264]  (
DECLIT   [line 264]  8
SYMBOL   [line 264]  )
SYMBOL   [line 264]  )
SYMBOL   [line 264]  ;
ID       [line 265]  print_str
SYMBOL   [line 265]  (
STRLIT   [line 265]  "\n"
SYMBOL   [line 265]  )
SYMBOL   [line 265]  ;
ID       [line 266]  nums
SYMBOL   [line 266]  [
DECLIT   [line 266]  0
SYMBOL   [line 266]  ]
SYMBOL   [line 266]  =
DECLIT   [line 266]  2
SYMBOL   [line 266]  ;
ID       [line 267]  print_str
SYMBOL   [line 267]  (
STRLIT   [line 267]  "Expected: 8\nWas: "
SYMBOL   [line 267]  )
SYMBOL   [line 267]  ;
ID       [line 268]  print_int
SYMBOL   [line 268]  (
ID       [line 268]  sum_nums
SYMBOL   [line 268]  (
DECLIT   [line 268]  8
SYMBOL   [line 268]  )
SYMBOL   [line 268]  )
SYMBOL   [line 268]  ;
ID       [line 269]  print_str
SYMBOL   [line 269]  (
STRLIT   [line 269]  "\n"
SYMBOL   [line 269]  )
SYMBOL   [line 269]  ;
ID       [line 270]  nums
SYMBOL   [line 270]  [
DECLIT   [line 270]  7
SYMBOL   [line 270]  ]
SYMBOL   [line 270]  =
DECLIT   [line 270]  5
SYMBOL   [line 270]  ;
ID       [line 271]  print_str
SYMBOL   [line 271]  (
STRLIT   [line 271]  "Expected: 13\nWas: "
SYMBOL   [line 271]  )
SYMBOL   [line 271]  ;
ID       [line 272]  print_int
SYMBOL   [line 272]  (
ID       [line 272]  sum_nums
SYMBOL   [line 272]  (
DECLIT   [line 272]  8
SYMBOL   [line 272]  )
SYMBOL   [line 272]  )
SYMBOL   [line 272]  ;
ID       [line 273]  print_str
SYMBOL   [line 273]  (
STRLIT   [line 273]  "\n"
SYMBOL   [line 273]  )
SYMBOL   [line 273]  ;
ID       [line 274]  print_str
SYMBOL   [line 274]  (
STRLIT   [line 274]  "Expected: 0\nWas: "
SYMBOL   [line 274]  )
SYMBOL   [line 274]  ;
ID       [line 275]  print_int
SYMBOL   [line 275]  (
ID       [line 275]  sum_nums
SYMBOL   [line 275]  (
DECLIT   [line 275]  0
SYMBOL   [line 275]  )
SYMBOL   [line 275]  )
SYMBOL   [line 275]  ;
ID       [line 276]  print_str
SYMBOL   [line 276]  (
STRLIT   [line 276]  "\n"
SYMBOL   [line 276]  )
SYMBOL   [line 276]  ;
ID       [line 277]  print_str
SYMBOL   [line 277]  (
STRLIT   [line 277]  "\n"
SYMBOL   [line 277]  )
SYMBOL   [line 277]  ;
SYMBOL   [line 278]  }
KEYWORD  [line 280]  def
KEYWORD  [line 280]  void
ID       [line 280]  test_sort_nums
SYMBOL   [line 280]  (
SYMBOL   [line 280]  )
SYMBOL   [line 281]  {
ID       [line 282]  print_str
SYMBOL   [line 282]  (
STRLIT   [line 282]  "Test_Sort_Nums"
SYMBOL   [line 282]  )
SYMBOL   [line 282]  ;
ID       [line 283]  print_str
SYMBOL   [line 283]  (
STRLIT   [line 283]  "\n"
SYMBOL   [line 283]  )
SYMBOL   [line 283]  ;
ID       [line 285]  nums
SYMBOL   [line 285]  [
DECLIT   [line 285]  0
SYMBOL   [line 285]  ]
SYMBOL   [line 285]  =
DECLIT   [line 285]  9
SYMBOL   [line 285]  ;
ID       [line 286]  nums
SYMBOL   [line 286]  [
DECLIT   [line 286]  1
SYMBOL   [line 286]  ]
SYMBOL   [line 286]  =
DECLIT   [line 286]  3
SYMBOL   [line 286]  ;
ID       [line 287]  nums
SYMBOL   [line 287]  [
DECLIT   [line 287]  2
SYMBOL   [line 287]  ]
SYMBOL   [line 287]  =
DECLIT   [line 287]  8
SYMBOL   [line 287]  ;
ID       [line 288]  nums
SYMBOL   [line 288]  [
DECLIT   [line 288]  3
SYMBOL   [line 288]  ]
SYMBOL   [line 288]  =
DECLIT   [line 288]  1
SYMBOL   [line 288]  ;
ID       [line 289]  print_str
SYMBOL   [line 289]  (
STRLIT   [line 289]  "Expected: 01389\nWas: "
SYMBOL   [line 289]  )
SYMBOL   [line 289]  ;
ID       [line 290]  sort_nums
SYMBOL   [line 290]  (
DECLIT   [line 290]  4
SYMBOL   [line 290]  )
SYMBOL   [line 290]  ;
ID       [line 291]  print_int
SYMBOL   [line 291]  (
ID       [line 291]  nums
SYMBOL   [line 291]  [
DECLIT   [line 291]  0
SYMBOL   [line 291]  ]
SYMBOL   [line 291]  )
SYMBOL   [line 291]  ;
ID       [line 292]  print_int
SYMBOL   [line 292]  (
ID       [line 292]  nums
SYMBOL   [line 292]  [
DECLIT   [line 292]  1
SYMBOL   [line 292]  ]
SYMBOL   [line 292]  )
SYMBOL   [line 292]  ;
ID       [line 293]  print_int
SYMBOL   [line 293]  (
ID       [line 293]  nums
SYMBOL   [line 293]  [
DECLIT   [line 293]  2
SYMBOL   [line 293]  ]
SYMBOL   [line 293]  )
SYMBOL   [line 293]  ;
ID       [line 294]  print_int
SYMBOL   [line 294]  (
ID       [line 294]  nums
SYMBOL   [line 294]  [
DECLIT   [line 294]  3
SYMBOL   [line 294]  ]
SYMBOL   [line 294]  )
SYMBOL   [line 294]  ;
ID       [line 295]  print_int
SYMBOL   [line 295]  (
ID       [line 295]  nums
SYMBOL   [line 295]  [
DECLIT   [line 295]  4
SYMBOL   [line 295]  ]
SYMBOL   [line 295]  )
SYMBOL   [line 295]  ;
ID       [line 297]  print_str
SYMBOL   [line 297]  (
STRLIT   [line 297]  "\n"
SYMBOL   [line 297]  )
SYMBOL   [line 297]  ;
ID       [line 299]  nums
SYMBOL   [line 299]  [
DECLIT   [line 299]  0
SYMBOL   [line 299]  ]
SYMBOL   [line 299]  =
DECLIT   [line 299]  9
SYMBOL   [line 299]  ;
ID       [line 300]  nums
SYMBOL   [line 300]  [
DECLIT   [line 300]  1
SYMBOL   [line 300]  ]
SYMBOL   [line 300]  =
DECLIT   [line 300]  7
SYMBOL   [line 300]  ;
ID       [line 301]  nums
SYMBOL   [line 301]  [
DECLIT   [line 301]  2
SYMBOL   [line 301]  ]
SYMBOL   [line 301]  =
DECLIT   [line 301]  8
SYMBOL   [line 301]  ;
ID       [line 302]  nums
SYMBOL   [line 302]  [
DECLIT   [line 302]  3
SYMBOL   [line 302]  ]
SYMBOL   [line 302]  =
DECLIT   [line 302]  1
SYMBOL   [line 302]  ;
ID       [line 303]  nums
SYMBOL   [line 303]  [
DECLIT   [line 303]  4
SYMBOL   [line 303]  ]
SYMBOL   [line 303]  =
DECLIT   [line 303]  2
SYMBOL   [line 303]  ;
ID       [line 304]  print_str
SYMBOL   [line 304]  (
STRLIT   [line 304]  "Expected: 12789\nWas: "
SYMBOL   [line 304]  )
SYMBOL   [line 304]  ;
ID       [line 305]  sort_nums
SYMBOL   [line 305]  (
DECLIT   [line 305]  4
SYMBOL   [line 305]  )
SYMBOL   [line 305]  ;
ID       [line 306]  print_int
SYMBOL   [line 306]  (
ID       [line 306]  nums
SYMBOL   [line 306]  [
DECLIT   [line 306]  0
SYMBOL   [line 306]  ]
SYMBOL   [line 306]  )
SYMBOL   [line 306]  ;
ID       [line 307]  print_int
SYMBOL   [line 307]  (
ID       [line 307]  nums
SYMBOL   [line 307]  [
DECLIT   [line 307]  1
SYMBOL   [line 307]  ]
SYMBOL   [line 307]  )
SYMBOL   [line 307]  ;
ID       [line 308]  print_int
SYMBOL   [line 308]  (
ID       [line 308]  nums
SYMBOL   [line 308]  [
DECLIT   [line 308]  2
SYMBOL   [line 308]  ]
SYMBOL   [line 308]  )
SYMBOL   [line 308]  ;
ID       [line 309]  print_int
SYMBOL   [line 309]  (
ID       [line 309]  nums
SYMBOL   [line 309]  [
DECLIT   [line 309]  3
SYMBOL   [line 309]  ]
SYMBOL   [line 309]  )
SYMBOL   [line 309]  ;
ID       [line 310]  print_int
SYMBOL   [line 310]  (
ID       [line 310]  nums
SYMBOL   [line 310]  [
DECLIT   [line 310]  4
SYMBOL   [line 310]  ]
SYMBOL   [line 310]  )
SYMBOL   [line 310]  ;
ID       [line 312]  print_str
SYMBOL   [line 312]  (
STRLIT   [line 312]  "\n"
SYMBOL   [line 312]  )
SYMBOL   [line 312]  ;
ID       [line 313]  print_str
SYMBOL   [line 313]  (
STRLIT   [line 313]  "\n"
SYMBOL   [line 313]  )
SYMBOL   [line 313]  ;
SYMBOL   [line 314]  }
KEYWORD  [line 316]  def
KEYWORD  [line 316]  void
ID       [line 316]  test_draw_triangle
SYMBOL   [line 316]  (
SYMBOL   [line 316]  )
SYMBOL   [line 317]  {
ID       [line 318]  print_str
SYMBOL   [line 318]  (
STRLIT   [line 318]  "Test_Draw_Triangle\n"
SYMBOL   [line 318]  )
SYMBOL   [line 318]  ;
ID       [line 319]  print_str
SYMBOL   [line 319]  (
STRLIT   [line 319]  "Expected:\n#\nWas:\n"
SYMBOL   [line 319]  )
SYMBOL   [line 319]  ;
ID       [line 320]  draw_triangle
SYMBOL   [line 320]  (
DECLIT   [line 320]  1
SYMBOL   [line 320]  )
SYMBOL   [line 320]  ;
ID       [line 322]  print_str
SYMBOL   [line 322]  (
STRLIT   [line 322]  "Expected:\n##\nWas:\n"
SYMBOL   [line 322]  )
SYMBOL   [line 322]  ;
ID       [line 323]  draw_triangle
SYMBOL   [line 323]  (
DECLIT   [line 323]  2
SYMBOL   [line 323]  )
SYMBOL   [line 323]  ;
ID       [line 325]  print_str
SYMBOL   [line 325]  (
STRLIT   [line 325]  "Expected:\n #\n###\nWas:\n"
SYMBOL   [line 325]  )
SYMBOL   [line 325]  ;
ID       [line 326]  draw_triangle
SYMBOL   [line 326]  (
DECLIT   [line 326]  3
SYMBOL   [line 326]  )
SYMBOL   [line 326]  ;
ID       [line 328]  print_str
SYMBOL   [line 328]  (
STRLIT   [line 328]  "Expected:\n ##\n####\nWas:\n"
SYMBOL   [line 328]  )
SYMBOL   [line 328]  ;
ID       [line 329]  draw_triangle
SYMBOL   [line 329]  (
DECLIT   [line 329]  4
SYMBOL   [line 329]  )
SYMBOL   [line 329]  ;
ID       [line 331]  print_str
SYMBOL   [line 331]  (
STRLIT   [line 331]  "Expected:\n  #\n ###\n#####\nWas:\n"
SYMBOL   [line 331]  )
SYMBOL   [line 331]  ;
ID       [line 332]  draw_triangle
SYMBOL   [line 332]  (
DECLIT   [line 332]  5
SYMBOL   [line 332]  )
SYMBOL   [line 332]  ;
ID       [line 334]  print_str
SYMBOL   [line 334]  (
STRLIT   [line 334]  "Expected:\n    #\n   ###\n  #####\n #######\n#########\nWas:\n"
SYMBOL   [line 334]  )
SYMBOL   [line 334]  ;
ID       [line 335]  draw_triangle
SYMBOL   [line 335]  (
DECLIT   [line 335]  9
SYMBOL   [line 335]  )
SYMBOL   [line 335]  ;
SYMBOL   [line 337]  }
KEYWORD  [line 339]  def
KEYWORD  [line 339]  int
ID       [line 339]  main
SYMBOL   [line 339]  (
SYMBOL   [line 339]  )
SYMBOL   [line 340]  {
ID       [line 341]  test_fact
SYMBOL   [line 341]  (
SYMBOL   [line 341]  )
SYMBOL   [line 341]  ;
ID       [line 342]  test_fib
SYMBOL   [line 342]  (
SYMBOL   [line 342]  )
SYMBOL   [line 342]  ;
ID       [line 343]  test_is_prime
SYMBOL   [line 343]  (
SYMBOL   [line 343]  )
SYMBOL   [line 343]  ;
ID       [line 344]  test_gcd
SYMBOL   [line 344]  (
SYMBOL   [line 344]  )
SYMBOL   [line 344]  ;
ID       [line 345]  test_sum_nums
SYMBOL   [line 345]  (
SYMBOL   [line 345]  )
SYMBOL   [line 345]  ;
ID       [line 346]  test_sort_nums
SYMBOL   [line 346]  (
SYMBOL   [line 346]  )
SYMBOL   [line 346]  ;
ID       [line 347]  test_draw_triangle
SYMBOL   [line 347]  (
SYMBOL   [line 347]  )
SYMBOL   [line 347]  ;
SYMBOL   [line 348]  }
